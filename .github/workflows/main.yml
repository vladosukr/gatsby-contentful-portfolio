name: CI/CD AWS CDK execution

on:
  push:
    branches:
      - master

env:
  S3_BUCKET_NAME: "vlad-test-deploy"
  AWS_REGION: "us-east-1"

jobs:
  build:
    name: Build performance
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Repository checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Clean install dependencies and build
      env:
        CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
        CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
        MAILCHIMP_ENDPOINT: "https://www.gatsbyjs.org/packages/gatsby-plugin-mailchimp/?=mailchimp#mailchimp-endpoint"
      run:
        npm ci
        npm run build
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: gatsby-contentful-portfolio/

  infrastructure:
    name: Infrastructure formation
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Repository checkout
      uses: actions/checkout@v2
      with:
          cdk_subcommand: 'bootstrap'
          cdk_stack: './cdk-toolkit/cdk/lib/cdk-stack.ts'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

  deployment:
    name: Deployment formation
    runs-on: ubuntu-latest
    needs: infrastructure
    steps:
    - name: Download package
      uses: actions/download-artifact@v2
      with:
        name: my-artifact
        path: .
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
    - name: Upload files to S3 with AWS CLI
      run: |
          aws s3 sync . s3://${{ env.S3_BUCKET_NAME }} --delete







